<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="sprouts"><sessioninfo id="danpad-58fd5583" start="1677927038927" dump="1677927043053"/><package name="sprouts/impl"><class name="sprouts/impl/AbstractVariable$1" sourcefilename="AbstractVariable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Z)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariable$2" sourcefilename="AbstractVariable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Z)V" line="28"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/impl/AbstractVariable$3" sourcefilename="AbstractVariable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Z)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariable$4" sourcefilename="AbstractVariable.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljavax/swing/border/Border;Ljava/lang/String;Ljava/util/List;Z)V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/impl/AbstractVariable$5" sourcefilename="AbstractVariable.java"><method name="&lt;init&gt;" desc="(Lsprouts/impl/AbstractVariable;ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Z)V" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariables$3" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/impl/AbstractVariables$4" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/impl/AbstractVariables$1" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariables$2" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariables$7" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(Lsprouts/impl/AbstractVariables;)V" line="345"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="347"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="348"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariables" sourcefilename="AbstractVariables.java"><method name="of" desc="(ZLjava/lang/Class;[Lsprouts/Var;)Lsprouts/Vars;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZLsprouts/Var;[Lsprouts/Var;)Lsprouts/Vars;" line="21"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZLjava/lang/Object;[Ljava/lang/Object;)Lsprouts/Vars;" line="30"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZLjava/lang/Class;Ljava/lang/Iterable;)Lsprouts/Vars;" line="40"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofNullable" desc="(ZLjava/lang/Class;)Lsprouts/Vars;" line="49"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(ZLjava/lang/Class;[Lsprouts/Var;)Lsprouts/Vars;" line="54"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(ZLjava/lang/Class;[Ljava/lang/Object;)Lsprouts/Vars;" line="60"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(ZLsprouts/Var;[Lsprouts/Var;)Lsprouts/Vars;" line="69"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="at" desc="(I)Lsprouts/Var;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/Class;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="(I)Lsprouts/Vars;" line="107"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popLast" desc="(I)Lsprouts/Vars;" line="124"><counter type="INSTRUCTION" missed="15" covered="52"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFirst" desc="(I)Lsprouts/Vars;" line="143"><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popFirst" desc="(I)Lsprouts/Vars;" line="160"><counter type="INSTRUCTION" missed="15" covered="48"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Lsprouts/Vars;)Lsprouts/Vars;" line="175"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAt" desc="(ILsprouts/Var;)Lsprouts/Vars;" line="187"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAt" desc="(I)Lsprouts/Vars;" line="197"><counter type="INSTRUCTION" missed="18" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAt" desc="(ILsprouts/Var;)Lsprouts/Vars;" line="209"><counter type="INSTRUCTION" missed="23" covered="37"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lsprouts/Vals;)Lsprouts/Vars;" line="227"><counter type="INSTRUCTION" missed="12" covered="55"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Lsprouts/Vars;)Lsprouts/Vars;" line="247"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()Lsprouts/Vars;" line="259"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeDistinct" desc="()V" line="276"><counter type="INSTRUCTION" missed="5" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="revert" desc="()Lsprouts/Vars;" line="289"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onChange" desc="(Lsprouts/Action;)Lsprouts/Vals;" line="302"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fireChange" desc="()Lsprouts/Vals;" line="309"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_createDelegate" desc="(ILsprouts/Change;Lsprouts/Var;Lsprouts/Var;)Lsprouts/ValsDelegate;" line="316"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_triggerAction" desc="(Lsprouts/Change;ILsprouts/Var;Lsprouts/Var;)V" line="327"><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="345"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="355"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="367"><counter type="INSTRUCTION" missed="10" covered="34"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_checkNullSafety" desc="()V" line="382"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_checkNullSafetyOf" desc="(Lsprouts/Val;)V" line="388"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$1" desc="(Lsprouts/Var;)Ljava/lang/String;" line="356"><counter type="INSTRUCTION" missed="12" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sort$0" desc="(Ljava/util/Comparator;Lsprouts/Var;Lsprouts/Var;)I" line="269"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="245" covered="833"/><counter type="BRANCH" missed="36" covered="76"/><counter type="LINE" missed="26" covered="166"/><counter type="COMPLEXITY" missed="40" covered="53"/><counter type="METHOD" missed="5" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariables$5" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Z[Lsprouts/Var;)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/impl/AbstractVariables$6" sourcefilename="AbstractVariables.java"><method name="&lt;init&gt;" desc="(Lsprouts/impl/AbstractVariables;ILsprouts/Change;Lsprouts/Var;Lsprouts/Var;)V" line="316"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()I" line="317"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeType" desc="()Lsprouts/Change;" line="318"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newValue" desc="()Lsprouts/Val;" line="319"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oldValue" desc="()Lsprouts/Val;" line="320"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="24"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractValue" sourcefilename="AbstractValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;ZLjava/lang/Object;)V" line="12"><counter type="INSTRUCTION" missed="22" covered="44"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseNull" desc="()Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSet" desc="(Lsprouts/Action;)Lsprouts/Val;" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fireSet" desc="()Lsprouts/Val;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_triggerActions" desc="(Ljava/util/List;)V" line="60"><counter type="INSTRUCTION" missed="3" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowsNull" desc="()Z" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="6" covered="78"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="94"><counter type="INSTRUCTION" missed="7" covered="33"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="107"><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="254"/><counter type="BRANCH" missed="12" covered="34"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/impl/AbstractVariable" sourcefilename="AbstractVariable.java"><method name="ofNullable" desc="(ZLjava/lang/Class;Ljava/lang/Object;)Lsprouts/Var;" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZLjava/lang/Class;Ljava/lang/Object;)Lsprouts/Var;" line="28"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(ZLjava/lang/Object;)Lsprouts/Var;" line="32"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZLjavax/swing/border/Border;)Lsprouts/Var;" line="37"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Z)V" line="42"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withId" desc="(Ljava/lang/String;)Lsprouts/Var;" line="78"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onAct" desc="(Lsprouts/Action;)Lsprouts/Var;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fireAct" desc="()Lsprouts/Var;" line="92"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="act" desc="(Ljava/lang/Object;)Lsprouts/Var;" line="99"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)Lsprouts/Var;" line="109"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setInternal" desc="(Ljava/lang/Object;)Z" line="116"><counter type="INSTRUCTION" missed="25" covered="47"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="viewAs" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lsprouts/Val;" line="141"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$viewAs$2" desc="(Lsprouts/Var;Ljava/util/function/Function;Ljava/lang/Object;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$viewAs$1" desc="(Lsprouts/Var;Ljava/util/function/Function;Lsprouts/Val;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fireAct$0" desc="(Ljava/util/function/Consumer;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="241"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="7" covered="45"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractValue.java"><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="2" ci="8" mb="1" cb="3"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="1" cb="1"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="1" cb="1"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="2" ci="6" mb="1" cb="1"/><line nr="81" mi="0" ci="6" mb="0" cb="2"/><line nr="82" mi="2" ci="7" mb="1" cb="1"/><line nr="83" mi="2" ci="4" mb="1" cb="1"/><line nr="84" mi="0" ci="18" mb="0" cb="4"/><line nr="85" mi="0" ci="12" mb="0" cb="2"/><line nr="86" mi="0" ci="17" mb="0" cb="0"/><line nr="94" mi="2" ci="2" mb="1" cb="1"/><line nr="95" mi="2" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="1" ci="9" mb="1" cb="3"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="13" mb="0" cb="2"/><line nr="109" mi="2" ci="11" mb="1" cb="1"/><line nr="110" mi="2" ci="11" mb="1" cb="1"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="254"/><counter type="BRANCH" missed="12" covered="34"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractVariables.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="15" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="2"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="18" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="16" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="15" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="15" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="5" ci="3" mb="1" cb="1"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="2" ci="2" mb="1" cb="1"/><line nr="110" mi="3" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="15" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="5" ci="3" mb="1" cb="1"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="4" ci="2" mb="1" cb="1"/><line nr="127" mi="6" ci="3" mb="1" cb="1"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="15" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="5" ci="3" mb="1" cb="1"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="2" ci="2" mb="1" cb="1"/><line nr="146" mi="3" ci="3" mb="1" cb="1"/><line nr="147" mi="0" ci="8" mb="1" cb="1"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="5" ci="3" mb="1" cb="1"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="4" ci="2" mb="1" cb="1"/><line nr="163" mi="6" ci="3" mb="1" cb="1"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="15" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="5" ci="3" mb="1" cb="1"/><line nr="176" mi="0" ci="9" mb="0" cb="2"/><line nr="177" mi="0" ci="6" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="2" cb="2"/><line nr="199" mi="18" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="5" ci="3" mb="1" cb="1"/><line nr="210" mi="0" ci="7" mb="2" cb="2"/><line nr="211" mi="18" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="5" ci="3" mb="1" cb="1"/><line nr="228" mi="0" ci="8" mb="0" cb="2"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="7" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="1" cb="1"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="14" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="5" ci="3" mb="1" cb="1"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="2"/><line nr="251" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="2"/><line nr="269" mi="0" ci="12" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="5" ci="3" mb="1" cb="1"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="11" mb="0" cb="2"/><line nr="279" mi="0" ci="5" mb="0" cb="2"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="9" mb="0" cb="2"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="10" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="27" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="12" ci="0" mb="2" cb="0"/><line nr="320" mi="12" ci="0" mb="2" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="11" mb="0" cb="2"/><line nr="331" mi="0" ci="3" mb="0" cb="2"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="10" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="10" mb="0" cb="2"/><line nr="348" mi="0" ci="12" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="12" ci="15" mb="1" cb="1"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="2"/><line nr="361" mi="0" ci="19" mb="0" cb="0"/><line nr="367" mi="2" ci="2" mb="1" cb="1"/><line nr="368" mi="2" ci="3" mb="1" cb="1"/><line nr="369" mi="0" ci="3" mb="1" cb="1"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="2" ci="5" mb="1" cb="1"/><line nr="373" mi="0" ci="8" mb="0" cb="2"/><line nr="374" mi="2" ci="8" mb="1" cb="1"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="1" cb="1"/><line nr="383" mi="0" ci="11" mb="0" cb="2"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="6" mb="2" cb="2"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="902"/><counter type="BRANCH" missed="40" covered="78"/><counter type="LINE" missed="28" covered="171"/><counter type="COMPLEXITY" missed="47" covered="62"/><counter type="METHOD" missed="10" covered="40"/><counter type="CLASS" missed="3" covered="5"/></sourcefile><sourcefile name="AbstractVariable.java"><line nr="24" mi="0" ci="19" mb="0" cb="0"/><line nr="28" mi="19" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="20" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="19" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="28" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="4"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="1" cb="3"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="12" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="1" cb="1"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="14" mb="0" cb="0"/><line nr="144" mi="0" ci="14" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="271"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="7" covered="45"/><counter type="COMPLEXITY" missed="7" covered="24"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="2" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="400" covered="1427"/><counter type="BRANCH" missed="55" covered="129"/><counter type="LINE" missed="40" covered="262"/><counter type="COMPLEXITY" missed="66" covered="108"/><counter type="METHOD" missed="14" covered="68"/><counter type="CLASS" missed="5" covered="10"/></package><package name="sprouts"><class name="sprouts/Noticeable" sourcefilename="Noticeable.java"/><class name="sprouts/Var" sourcefilename="Var.java"><method name="ofNullable" desc="(Ljava/lang/Class;Ljava/lang/Object;)Lsprouts/Var;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;)Lsprouts/Var;" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/lang/Object;)Lsprouts/Var;" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Ljava/util/function/Function;)Lsprouts/Var;" line="148"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapTo" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lsprouts/Var;" line="165"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="26"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/Change" sourcefilename="Change.java"><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/Vals" sourcefilename="Vals.java"><method name="of" desc="(Ljava/lang/Class;[Lsprouts/Val;)Lsprouts/Vals;" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lsprouts/Val;[Lsprouts/Val;)Lsprouts/Vals;" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Lsprouts/Vals;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/lang/Iterable;)Lsprouts/Vals;" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Class;Lsprouts/Vals;)Lsprouts/Vals;" line="68"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofNullable" desc="(Ljava/lang/Class;[Lsprouts/Val;)Lsprouts/Vals;" line="84"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(Ljava/lang/Class;[Ljava/lang/Object;)Lsprouts/Vals;" line="98"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(Lsprouts/Val;[Lsprouts/Val;)Lsprouts/Vals;" line="110"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="147"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="()Z" line="152"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="166"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lsprouts/Val;)I" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lsprouts/Val;)Z" line="184"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lsprouts/Vals;)Z" line="194"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stream" desc="()Ljava/util/stream/Stream;" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Ljava/util/List;" line="239"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toValList" desc="()Ljava/util/List;" line="244"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSet" desc="()Ljava/util/Set;" line="249"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="()Ljava/util/Map;" line="255"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toValMap" desc="()Ljava/util/Map;" line="267"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="any" desc="(Ljava/util/function/Predicate;)Z" line="280"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Ljava/util/function/Predicate;)Z" line="287"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="none" desc="(Ljava/util/function/Predicate;)Z" line="294"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="anyEmpty" desc="()Z" line="300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="175"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="17" covered="33"/><counter type="COMPLEXITY" missed="15" covered="21"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/Event$2" sourcefilename="Event.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Consumer;)V" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fire" desc="()V" line="65"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Lsprouts/Listener;)Lsprouts/Noticeable;" line="68"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unsubscribe" desc="(Lsprouts/Listener;)Lsprouts/Noticeable;" line="73"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$fire$0" desc="()V" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/Event$1" sourcefilename="Event.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fire" desc="()V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subscribe" desc="(Lsprouts/Listener;)Lsprouts/Noticeable;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unsubscribe" desc="(Lsprouts/Listener;)Lsprouts/Noticeable;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sprouts/Vars" sourcefilename="Vars.java"><method name="of" desc="(Ljava/lang/Class;[Lsprouts/Var;)Lsprouts/Vars;" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;)Lsprouts/Vars;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lsprouts/Var;[Lsprouts/Var;)Lsprouts/Vars;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Lsprouts/Vars;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/lang/Iterable;)Lsprouts/Vars;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofNullable" desc="(Ljava/lang/Class;[Lsprouts/Var;)Lsprouts/Vars;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(Ljava/lang/Class;)Lsprouts/Vars;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(Ljava/lang/Class;[Ljava/lang/Object;)Lsprouts/Vars;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofNullable" desc="(Lsprouts/Var;[Lsprouts/Var;)Lsprouts/Vars;" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="first" desc="()Lsprouts/Var;" line="128"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="last" desc="()Lsprouts/Var;" line="131"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lsprouts/Vars;" line="139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lsprouts/Var;)Lsprouts/Vars;" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popAt" desc="(I)Lsprouts/Var;" line="164"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Lsprouts/Vars;" line="176"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOrThrow" desc="(Ljava/lang/Object;)Lsprouts/Vars;" line="188"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lsprouts/Var;)Lsprouts/Vars;" line="201"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeOrThrow" desc="(Lsprouts/Var;)Lsprouts/Vars;" line="213"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFirst" desc="()Lsprouts/Vars;" line="224"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popFirst" desc="()Lsprouts/Var;" line="232"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="()Lsprouts/Vars;" line="242"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popLast" desc="()Lsprouts/Var;" line="250"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIf" desc="(Ljava/util/function/Predicate;)Lsprouts/Vars;" line="295"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popIf" desc="(Ljava/util/function/Predicate;)Lsprouts/Vars;" line="312"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIfItem" desc="(Ljava/util/function/Predicate;)Lsprouts/Vars;" line="329"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popIfItem" desc="(Ljava/util/function/Predicate;)Lsprouts/Vars;" line="346"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="([Ljava/lang/Object;)Lsprouts/Vars;" line="370"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAt" desc="(ILjava/lang/Object;)Lsprouts/Vars;" line="382"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAt" desc="(ILjava/lang/Object;)Lsprouts/Vars;" line="399"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lsprouts/Vars;" line="419"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/lang/Iterable;)Lsprouts/Vars;" line="432"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Lsprouts/Vals;)Lsprouts/Vars;" line="445"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="([Ljava/lang/Object;)Lsprouts/Vars;" line="467"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/util/function/Function;)Lsprouts/Vars;" line="485"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapTo" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lsprouts/Vars;" line="497"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toVals" desc="()Lsprouts/Vals;" line="506"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()V" line="523"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="433"/><counter type="BRANCH" missed="12" covered="32"/><counter type="LINE" missed="16" covered="74"/><counter type="COMPLEXITY" missed="16" covered="43"/><counter type="METHOD" missed="8" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/Val" sourcefilename="Val.java"><method name="ofNullable" desc="(Ljava/lang/Class;Ljava/lang/Object;)Lsprouts/Val;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;)Lsprouts/Val;" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseNullable" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseGet" desc="(Ljava/util/function/Supplier;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orElseThrow" desc="()Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPresent" desc="()Z" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="145"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifPresent" desc="(Ljava/util/function/Consumer;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifPresentOrElse" desc="(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V" line="172"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="(Ljava/util/function/Supplier;)Lsprouts/Val;" line="191"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="view" desc="(Ljava/util/function/Function;)Lsprouts/Val;" line="235"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="viewAsString" desc="(Ljava/util/function/Function;)Lsprouts/Val;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="viewAsString" desc="()Lsprouts/Val;" line="253"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="viewAsDouble" desc="(Ljava/util/function/Function;)Lsprouts/Val;" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="viewAsDouble" desc="()Lsprouts/Val;" line="280"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="viewAsInt" desc="(Ljava/util/function/Function;)Lsprouts/Val;" line="297"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="viewAsInt" desc="()Lsprouts/Val;" line="314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="itemAsString" desc="()Ljava/lang/String;" line="330"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeAsString" desc="()Ljava/lang/String;" line="338"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is" desc="(Ljava/lang/Object;)Z" line="347"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Lsprouts/Val;)Z" line="359"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNot" desc="(Ljava/lang/Object;)Z" line="370"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNot" desc="(Lsprouts/Val;)Z" line="380"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOneOf" desc="(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Z" line="392"><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoID" desc="()Z" line="421"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasID" desc="()Z" line="426"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toOptional" desc="()Ljava/util/Optional;" line="441"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="484"><counter type="INSTRUCTION" missed="64" covered="39"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="(Ljava/lang/Object;)I" line="507"><counter type="INSTRUCTION" missed="40" covered="35"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$viewAsInt$3" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="316"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$viewAsInt$2" desc="(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Integer;" line="299"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$viewAsDouble$1" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="282"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$viewAsDouble$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Double;" line="265"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="227" covered="221"/><counter type="BRANCH" missed="32" covered="36"/><counter type="LINE" missed="29" covered="49"/><counter type="COMPLEXITY" missed="39" covered="31"/><counter type="METHOD" missed="13" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/Listener" sourcefilename="Listener.java"/><class name="sprouts/Action" sourcefilename="Action.java"><method name="canBeRemoved" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sprouts/ValsDelegate" sourcefilename="ValsDelegate.java"/><class name="sprouts/Event" sourcefilename="Event.java"><method name="of" desc="(Lsprouts/Listener;)Lsprouts/Event;" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="()Lsprouts/Event;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/util/function/Consumer;)Lsprouts/Event;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ValsDelegate.java"/><sourcefile name="Listener.java"/><sourcefile name="Var.java"><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="26"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Noticeable.java"/><sourcefile name="Vars.java"><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="2" ci="6" mb="1" cb="1"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="2"/><line nr="190" mi="0" ci="12" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="2" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="2" cb="0"/><line nr="215" mi="12" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="8" mb="1" cb="1"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="1" ci="11" mb="1" cb="1"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="0" cb="2"/><line nr="297" mi="0" ci="12" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="9" mb="0" cb="2"/><line nr="314" mi="0" ci="12" mb="0" cb="2"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="9" mb="0" cb="2"/><line nr="331" mi="0" ci="13" mb="0" cb="2"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="9" mb="0" cb="2"/><line nr="348" mi="0" ci="13" mb="0" cb="2"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="21" mb="0" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="6" mb="0" cb="0"/><line nr="399" mi="0" ci="6" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="20" mb="0" cb="2"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="14" ci="0" mb="2" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="14" ci="0" mb="2" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="21" mb="0" cb="2"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="487" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="489" mi="0" ci="18" mb="0" cb="2"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="501" mi="0" ci="8" mb="0" cb="2"/><line nr="502" mi="0" ci="9" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="5" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="1" cb="1"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="5" ci="0" mb="0" cb="0"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="433"/><counter type="BRANCH" missed="12" covered="32"/><counter type="LINE" missed="16" covered="74"/><counter type="COMPLEXITY" missed="16" covered="43"/><counter type="METHOD" missed="8" covered="29"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Event.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="Vals.java"><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="5" mb="1" cb="1"/><line nr="152" mi="1" ci="6" mb="1" cb="1"/><line nr="158" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="2"/><line nr="168" mi="0" ci="6" mb="0" cb="2"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="7" ci="0" mb="2" cb="0"/><line nr="195" mi="8" ci="0" mb="2" cb="0"/><line nr="196" mi="10" ci="0" mb="2" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="9" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="2"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="287" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="175"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="17" covered="33"/><counter type="COMPLEXITY" missed="15" covered="21"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Val.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="2"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="8" mb="0" cb="2"/><line nr="380" mi="8" ci="0" mb="2" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="2"/><line nr="393" mi="2" ci="4" mb="1" cb="1"/><line nr="394" mi="6" ci="10" mb="1" cb="1"/><line nr="395" mi="6" ci="0" mb="2" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="7" ci="0" mb="2" cb="0"/><line nr="426" mi="2" ci="7" mb="1" cb="1"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="8" ci="3" mb="1" cb="1"/><line nr="485" mi="0" ci="11" mb="0" cb="2"/><line nr="486" mi="8" ci="3" mb="1" cb="1"/><line nr="487" mi="8" ci="3" mb="1" cb="1"/><line nr="488" mi="8" ci="3" mb="1" cb="1"/><line nr="489" mi="8" ci="3" mb="1" cb="1"/><line nr="490" mi="8" ci="3" mb="1" cb="1"/><line nr="491" mi="8" ci="3" mb="1" cb="1"/><line nr="492" mi="8" ci="3" mb="1" cb="1"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="507" mi="5" ci="3" mb="1" cb="1"/><line nr="508" mi="0" ci="8" mb="0" cb="2"/><line nr="509" mi="5" ci="3" mb="1" cb="1"/><line nr="510" mi="5" ci="3" mb="1" cb="1"/><line nr="511" mi="5" ci="3" mb="1" cb="1"/><line nr="512" mi="5" ci="3" mb="1" cb="1"/><line nr="513" mi="5" ci="3" mb="1" cb="1"/><line nr="514" mi="5" ci="3" mb="1" cb="1"/><line nr="515" mi="5" ci="3" mb="1" cb="1"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="227" covered="221"/><counter type="BRANCH" missed="32" covered="36"/><counter type="LINE" missed="29" covered="49"/><counter type="COMPLEXITY" missed="39" covered="31"/><counter type="METHOD" missed="13" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Action.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Change.java"><line nr="6" mi="0" ci="36" mb="0" cb="0"/><line nr="8" mi="0" ci="48" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="541" covered="941"/><counter type="BRANCH" missed="57" covered="85"/><counter type="LINE" missed="87" covered="166"/><counter type="COMPLEXITY" missed="87" covered="101"/><counter type="METHOD" missed="45" covered="72"/><counter type="CLASS" missed="3" covered="6"/></package><counter type="INSTRUCTION" missed="941" covered="2368"/><counter type="BRANCH" missed="112" covered="214"/><counter type="LINE" missed="127" covered="428"/><counter type="COMPLEXITY" missed="153" covered="209"/><counter type="METHOD" missed="59" covered="140"/><counter type="CLASS" missed="8" covered="16"/></report>